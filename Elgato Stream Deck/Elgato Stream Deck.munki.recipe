<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
    <key>Description</key>
    <string>Downloads the latest version of Elgato Stream Deck and imports it into Munki.

Set the DERIVE_MIN_OS variable to a non-empty string to set the minimum_os_version via MunkiInstallsItemsCreator. This requires a minimum AutoPkg version of 2.7 please update if you're not already running it.

To force MunkiImporter to import the pkg, set FORCE_MUNKIIMPORT to a non-empty string.</string>
    <key>Identifier</key>
    <string>com.github.dataJAR-recipes.munki.Elgato Stream Deck</string>
    <key>Input</key>
    <dict>
        <key>NAME</key>
        <string>ElgatoStreamDeck</string>
        <key>MUNKI_REPO_SUBDIR</key>
        <string>apps/%NAME%</string>
        <key>DERIVE_MIN_OS</key>
        <string>YES</string>
        <key>FORCE_MUNKIIMPORT</key>
        <string></string>
        <key>pkginfo</key>
        <dict>
            <key>catalogs</key>
            <array>
                <string>testing</string>
            </array>
            <key>description</key>
            <string>You are creating quality content backed by the best tech on the planet. But you want to do more. With Stream Deck, unleash your creative genius and make waves across Twitch and YouTube. All while focusing on what matters most: your audience.</string>
            <key>developer</key>
            <string>Corsair Memory, Inc</string>
            <key>display_name</key>
            <string>Elgato Stream Deck</string>
            <key>name</key>
            <string>%NAME%</string>
            <key>uninstall_method</key>
            <string>uninstall_script</string>
            <key>uninstall_script</key>
            <string>#!/bin/bash

# This uninstall script is taken from the Elagto Stream Deck Uninstaller Package:
# https://help.elgato.com/hc/en-us/articles/360028232731-Stream-Deck-Uninstall-Procedure-on-macOS

# unload the LaunchAgent
launchctl unload -w /Library/LaunchAgents/com.elgato.StreamDeck.plist &gt; /dev/null 2&gt;&amp;1
launchctl unload -w $HOME/Library/LaunchAgents/com.elgato.StreamDeck.plist &gt; /dev/null 2&gt;&amp;1

# kill the Stream Deck application if it was launched manually
killall &quot;Stream Deck&quot; &gt; /dev/null 2&gt;&amp;1 || true

# delete previous Stream Deck app (as it may have different name)
rm -f /Library/LaunchAgents/com.elgato.StreamDeck.plist
rm -f $HOME/Library/LaunchAgents/com.elgato.StreamDeck.plist

# remove app
rm -rf &quot;/Applications/Stream Deck.app&quot;
rm -rf &quot;/Applications/Elgato Stream Deck.app&quot;

# remove STREAMDECKSHM
su - $USER -c &quot;/bin/rm -rf ~/Library/Caches/STREAMDECKSHM&quot;

# remove cache
su - $USER -c &quot;/bin/rm -rf ~/Library/Caches/elgato/StreamDeck&quot;
su - $USER -c &quot;/bin/rm -rf ~/Library/Caches/com.elgato.StreamDeck&quot;

# remove com.elgato.StreamDeck in Application Support (Profiles, HockeyApp)
su - $USER -c &quot;/bin/rm -rf ~/Library/Application\ Support/com.elgato.StreamDeck&quot;

# remove preferences
su - $USER -c &quot;defaults delete com.elgato.StreamDeck&quot;
su - $USER -c &quot;/bin/rm -rf ~/Library/Preferences/com.elgato.StreamDeck.plist&quot;

# remove logs
su - $USER -c &quot;/bin/rm -rf ~/Library/Logs/StreamDeck&quot;

# remove OBS related stuff
PLUGIN_NAME=&quot;StreamDeckPlugin&quot;

OBS_PLUGINS_DIR_V2=&quot;$HOME/Library/Application Support/obs-studio/plugins&quot;
rm -rf &quot;$OBS_PLUGINS_DIR_V2/$PLUGIN_NAME.plugin&quot;

OBS_PLUGINS_DIR=&quot;/Library/Application Support/obs-studio/plugins&quot;
rm -rf &quot;$OBS_PLUGINS_DIR/$PLUGIN_NAME&quot;

exit 0</string>
            <key>unattended_install</key>
            <true/>
            <key>unattended_uninstall</key>
            <true/>
        </dict>
    </dict>
    <key>MinimumVersion</key>
    <string>2.7</string>
    <key>ParentRecipe</key>
    <string>com.github.dataJAR-recipes.download.Elgato Stream Deck</string>
    <key>Process</key>
    <array>
        <dict>
            <key>Processor</key>
            <string>FlatPkgUnpacker</string>
            <key>Arguments</key>
            <dict>
                <key>flat_pkg_path</key>
                <string>%pathname%</string>
                <key>destination_path</key>
                <string>%RECIPE_CACHE_DIR%/installer_unpack</string>
                <key>purge_destination</key>
                <true/>
            </dict>
        </dict>
        <dict>
            <key>Processor</key>
            <string>PkgPayloadUnpacker</string>
            <key>Arguments</key>
            <dict>
                <key>destination_path</key>
                <string>%RECIPE_CACHE_DIR%/installer_payload/</string>
                <key>pkg_payload_path</key>
                <string>%RECIPE_CACHE_DIR%/installer_unpack/Stream_Deck.pkg/Payload</string>
                <key>purge_destination</key>
                <false/>
            </dict>
        </dict>
        <dict>
            <key>Comment</key>
            <string>The Stream Deck installer package has a postinstall script that renames the bundled "Stream Deck.app" to "Elgato Stream Deck.app"

This ensures we're able to create an installs array that doesn't cause install loops.

For further info please see https://github.com/autopkg/dataJAR-recipes/issues/270</string>
            <key>Arguments</key>
            <dict>
                <key>overwrite</key>
                <string>true</string>
                <key>source</key>
                <string>%RECIPE_CACHE_DIR%/installer_payload/Applications/Stream Deck.app</string>
                <key>target</key>
                <string>%RECIPE_CACHE_DIR%/installer_payload/Applications/Elgato Stream Deck.app</string>
            </dict>
            <key>Processor</key>
            <string>FileMover</string>
        </dict>
        <dict>
            <key>Processor</key>
            <string>MunkiInstallsItemsCreator</string>
            <key>Arguments</key>
            <dict>
                <key>faux_root</key>
                <string>%RECIPE_CACHE_DIR%/installer_payload/</string>
                <key>derive_minimum_os_version</key>
                <string>%DERIVE_MIN_OS%</string>
                <key>installs_item_paths</key>
                <array>
                    <string>/Applications/Elgato Stream Deck.app</string>
                </array>
            </dict>
        </dict>
        <dict>
            <key>Processor</key>
            <string>MunkiPkginfoMerger</string>
        </dict>
        <dict>
            <key>Processor</key>
            <string>Versioner</string>
            <key>Arguments</key>
            <dict>
                <key>input_plist_path</key>
                <string>%destination_path%Applications/Elgato Stream Deck.app/Contents/Info.plist</string>
            </dict>
        </dict>
        <dict>
            <key>Processor</key>
            <string>MunkiPkginfoMerger</string>
            <key>Arguments</key>
            <dict>
                <key>additional_pkginfo</key>
                <dict>
                    <key>version</key>
                    <string>%version%</string>
                </dict>
            </dict>
        </dict>
        <dict>
            <key>Processor</key>
            <string>MunkiPkginfoMerger</string>
        </dict>
        <dict>
            <key>Processor</key>
            <string>MunkiImporter</string>
            <key>Arguments</key>
            <dict>
                <key>force_munkiimport</key>
                <string>%FORCE_MUNKIIMPORT%</string>
                <key>pkg_path</key>
                <string>%pathname%</string>
                <key>repo_subdirectory</key>
                <string>%MUNKI_REPO_SUBDIR%</string>
            </dict>
        </dict>
        <dict>
            <key>Processor</key>
            <string>PathDeleter</string>
            <key>Arguments</key>
            <dict>
                <key>path_list</key>
                <array>
                    <string>%RECIPE_CACHE_DIR%/installer_payload/</string>
                    <string>%RECIPE_CACHE_DIR%/installer_unpack/</string>
                </array>
            </dict>
        </dict>
    </array>
</dict>
</plist>
